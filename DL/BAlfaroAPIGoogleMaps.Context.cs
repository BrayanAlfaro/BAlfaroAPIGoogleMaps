//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BALfaroAPIGoogleMapsEntities : DbContext
    {
        public BALfaroAPIGoogleMapsEntities()
            : base("name=BALfaroAPIGoogleMapsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Automovil> Automovil { get; set; }
    
        public virtual int AutomovilAdd(string matricula, string marca, string modelo, string color, string latitudInicial, string longitudInicial, string latitudFinal, string longitudFinal)
        {
            var matriculaParameter = matricula != null ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var latitudInicialParameter = latitudInicial != null ?
                new ObjectParameter("LatitudInicial", latitudInicial) :
                new ObjectParameter("LatitudInicial", typeof(string));
    
            var longitudInicialParameter = longitudInicial != null ?
                new ObjectParameter("LongitudInicial", longitudInicial) :
                new ObjectParameter("LongitudInicial", typeof(string));
    
            var latitudFinalParameter = latitudFinal != null ?
                new ObjectParameter("LatitudFinal", latitudFinal) :
                new ObjectParameter("LatitudFinal", typeof(string));
    
            var longitudFinalParameter = longitudFinal != null ?
                new ObjectParameter("LongitudFinal", longitudFinal) :
                new ObjectParameter("LongitudFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutomovilAdd", matriculaParameter, marcaParameter, modeloParameter, colorParameter, latitudInicialParameter, longitudInicialParameter, latitudFinalParameter, longitudFinalParameter);
        }
    
        public virtual int AutomovilDelete(string matricula)
        {
            var matriculaParameter = matricula != null ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutomovilDelete", matriculaParameter);
        }
    
        public virtual int AutomovilUpdate(string matricula, string marca, string modelo, string color, string latitudInicial, string longitudInicial, string latitudFinal, string longitudFinal)
        {
            var matriculaParameter = matricula != null ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var latitudInicialParameter = latitudInicial != null ?
                new ObjectParameter("LatitudInicial", latitudInicial) :
                new ObjectParameter("LatitudInicial", typeof(string));
    
            var longitudInicialParameter = longitudInicial != null ?
                new ObjectParameter("LongitudInicial", longitudInicial) :
                new ObjectParameter("LongitudInicial", typeof(string));
    
            var latitudFinalParameter = latitudFinal != null ?
                new ObjectParameter("LatitudFinal", latitudFinal) :
                new ObjectParameter("LatitudFinal", typeof(string));
    
            var longitudFinalParameter = longitudFinal != null ?
                new ObjectParameter("LongitudFinal", longitudFinal) :
                new ObjectParameter("LongitudFinal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutomovilUpdate", matriculaParameter, marcaParameter, modeloParameter, colorParameter, latitudInicialParameter, longitudInicialParameter, latitudFinalParameter, longitudFinalParameter);
        }
    
        public virtual ObjectResult<AutomovilGetAll_Result> AutomovilGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutomovilGetAll_Result>("AutomovilGetAll");
        }
    
        public virtual ObjectResult<AutomovilGetById_Result> AutomovilGetById(string matricula)
        {
            var matriculaParameter = matricula != null ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AutomovilGetById_Result>("AutomovilGetById", matriculaParameter);
        }
    }
}
